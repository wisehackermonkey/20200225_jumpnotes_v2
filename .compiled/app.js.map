{"version":3,"sources":["../server/app.js"],"names":["PORT","EMPTY_DB_SCHEMA","notes","DATABASE_PATH","adapter","FileSync","app","db","use","express","static","urlencoded","post","req","res","note_text","body","SaveNoteDatabase","result_message","JSON","stringify","console","log","url","send","get","load_db_json","value","reduce","accumulator","current","time","text","SetupDatabase","listen","schema","defaults","write","note_text_","push","Date","now"],"mappings":";;AA0BA;;;;AACA;;;;AACA;;;;;;AAKA;AACA,IAAMA,OAAO,IAAb,C,CAPwB;AA3BxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAUA,IAAMC,kBAAkB,EAACC,OAAM,EAAP,EAAxB;AACA,IAAMC,gBAAgB,cAAtB;;AAEA;AACA,IAAMC,UAAU,IAAIC,kBAAJ,CAAaF,aAAb,CAAhB;AACA,IAAMG,MAAM,wBAAZ;AACA,IAAMC,KAAK,qBAAIH,OAAJ,CAAX;;AAEA;AACA;AACAE,IAAIE,GAAJ,CAAQC,kBAAQC,MAAR,CAAe,KAAf,CAAR;AACAJ,IAAIE,GAAJ,CAAQC,kBAAQE,UAAR,EAAR;;AAMA;AACAL,IAAIM,IAAJ,CAAS,gBAAT,EAA2B,UAACC,GAAD,EAAKC,GAAL,EAAW;;AAElC,QAAIC,YAAYF,IAAIG,IAAJ,CAASD,SAAzB;;AAEAE,qBAAiBF,SAAjB;;AAEA,QAAIG,iBAAiB,qCAAoCC,KAAKC,SAAL,CAAeP,IAAIG,IAAnB,CAAzD;;AAEAK,YAAQC,GAAR,CAAYT,IAAIU,GAAhB;AACAF,YAAQC,GAAR,kBAA2BP,SAA3B;AACAM,YAAQC,GAAR,CAAYJ,cAAZ;AACAJ,QAAIU,IAAJ,CAASN,cAAT;AACH,CAZD;;AAeAZ,IAAImB,GAAJ,CAAQ,iBAAR,EAA0B,UAACZ,GAAD,EAAKC,GAAL,EAAW;;AAEjC,QAAIY,eAAenB,GAAGkB,GAAH,CAAO,OAAP,EAAgBE,KAAhB,EAAnB;;AAEAN,YAAQC,GAAR,CAAYI,aAAaE,MAAb,CAAoB,UAACC,WAAD,EAAaC,OAAb;AAAA,eAAwBD,uBAAoBC,QAAQC,IAA5B,UAAqCD,QAAQE,IAA7C,CAAxB;AAAA,KAApB,CAAZ;AACAlB,QAAIU,IAAJ,CAASL,KAAKC,SAAL,CAAeM,YAAf,CAAT;AACH,CAND;;AAUAL,QAAQC,GAAR,CAAY,kCAAZ;;AAEAW,cAAchC,eAAd;;AAGAK,IAAI4B,MAAJ,CAAWlC,IAAX,EAAgB,YAAI;AAChBqB,YAAQC,GAAR,CAAY,WAAZ;AACAD,YAAQC,GAAR,+CAAwDtB,IAAxD;AACH,CAHD;;AAMA;AACA,SAASiC,aAAT,CAAuBE,MAAvB,EAA8B;AAC1B5B,OAAG6B,QAAH,CAAYD,MAAZ,EAAoBE,KAApB;AACH;;AAED,SAASpB,gBAAT,CAA0BqB,UAA1B,EAAqC;AAChC;AACA/B,OAAGkB,GAAH,CAAO,OAAP,EACCc,IADD,CACO,EAAEP,MAAMM,UAAR,EAAoBP,MAAMS,KAAKC,GAAL,EAA1B,EADP,EAECJ,KAFD;AAGJ","file":"app.js","sourcesContent":["//jumpnotes try number 2 \r\n//a notetaking app using a web page as the gui, and a nodejs backend \r\n//by wisehackermonkey oran c\r\n//20200225\r\n//x web page with text box\r\n//  api endpoint\r\n//  save to json function\r\n// dockerize\r\n//  host\r\n// x finish form setup [https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/forms]\r\n// - button save\r\n\r\n\r\n// x setup\r\n// x  api endpoint for form\r\n// x  webpage static routing\r\n// x webpage form\r\n// x  databse save notes from form\r\n//----feature creap\r\n// x view saved notes\r\n// x webpage css flex box for notes\r\n// - edit page\r\n// - edit text on clicked\r\n// - add favicon \r\n\r\n//fix  editNote(text)to work with note id number\r\nimport express from \"express\"\r\nimport low from \"lowdb\" //https://github.com/typicode/lowdb\r\nimport FileSync from \"lowdb/adapters/FileSync\"\r\n\r\n\r\n\r\n\r\n//settings\r\nconst PORT = 3000\r\nconst EMPTY_DB_SCHEMA = {notes:[]}\r\nconst DATABASE_PATH = './db/db.json'\r\n\r\n//library setup\r\nconst adapter = new FileSync(DATABASE_PATH)\r\nconst app = express()\r\nconst db = low(adapter)\r\n\r\n// library setup oneliners\r\n//static host main page\r\napp.use(express.static(\"web\"))\r\napp.use(express.urlencoded())\r\n\r\n\r\n\r\n\r\n\r\n//save the notes to the database\r\napp.post(\"/v1/note-save/\", (req,res)=>{\r\n\r\n    let note_text = req.body.note_text\r\n    \r\n    SaveNoteDatabase(note_text)\r\n    \r\n    let result_message = \"Note has been saved to database:\" +JSON.stringify(req.body)\r\n\r\n    console.log(req.url)\r\n    console.log(`Saved note: ${note_text}`)\r\n    console.log(result_message)\r\n    res.send(result_message);\r\n})\r\n\r\n\r\napp.get(\"/v1/load-notes/\",(req,res)=>{\r\n    \r\n    let load_db_json = db.get(\"notes\").value()\r\n   \r\n    console.log(load_db_json.reduce((accumulator,current)=> accumulator + `\\n ${current.time}: ${current.text}` ))\r\n    res.send(JSON.stringify(load_db_json))\r\n})\r\n\r\n\r\n\r\nconsole.log(\"Jumpnotes server v2: Starting...\")\r\n\r\nSetupDatabase(EMPTY_DB_SCHEMA)\r\n\r\n\r\napp.listen(PORT,()=>{\r\n    console.log(\"Running..\")\r\n    console.log(`jumpnotes is running on http://localhost:${PORT}`)\r\n})\r\n\r\n\r\n//database functionality\r\nfunction SetupDatabase(schema){\r\n    db.defaults(schema).write()\r\n}\r\n\r\nfunction SaveNoteDatabase(note_text_){\r\n     //save note to json database\r\n     db.get(\"notes\")\r\n     .push( { text: note_text_, time: Date.now()})\r\n     .write()\r\n}"]}